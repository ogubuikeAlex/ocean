[pytest]
# Pytest configuration for Harbor integration tests

# Test discovery patterns
python_files = test_*.py *_test.py
python_classes = Test*
python_functions = test_*

# Minimum Python version
minversion = 3.11

# Test paths
testpaths = tests

# Additional options
addopts =
    # Verbose output
    -v
    # Show summary of all test outcomes
    -ra
    # Show local variables in tracebacks
    -l
    # Strict markers (fail on unknown markers)
    --strict-markers
    # Strict config (fail on config warnings)
    --strict-config
    # Coverage options (if using pytest-cov)
    --cov=.
    --cov-report=html
    --cov-report=term-missing
    # Warnings
    -W error::DeprecationWarning
    -W error::PendingDeprecationWarning
    # Parallel execution (requires pytest-xdist)
    -n auto
    # Show slowest tests
    --durations=10
    # Color output
    --color=yes

# Markers
markers =
    unit: Unit tests that don't require external dependencies
    integration: Integration tests that may require external services
    slow: Tests that take a long time to run
    webhook: Tests related to webhook handling
    client: Tests related to Harbor client
    asyncio: Tests that use asyncio

# Asyncio mode
asyncio_mode = auto

# Coverage options
[coverage:run]
source = .
omit =
    */tests/*
    */test_*.py
    */__pycache__/*
    */venv/*
    */.venv/*
    */site-packages/*

[coverage:report]
precision = 2
show_missing = True
skip_covered = False
exclude_lines =
    pragma: no cover
    def __repr__
    raise AssertionError
    raise NotImplementedError
    if __name__ == .__main__.:
    if TYPE_CHECKING:
    @abstractmethod

[mypy]
python_version = 3.12
warn_return_any = True
warn_unused_configs = True
disallow_untyped_defs = False
disallow_incomplete_defs = False
check_untyped_defs = True
disallow_untyped_calls = False
warn_redundant_casts = True
warn_unused_ignores = True
warn_no_return = True
warn_unreachable = True
strict_optional = True

# Ignore missing imports for third-party libraries
ignore_missing_imports = True

# Exclude patterns
exclude = (?x)(
    ^\.venv/
    | ^tests/
    | ^build/
    | ^dist/
  )

[mypy-tests.*]
ignore_errors = True

[mypy-port_ocean.*]
ignore_missing_imports = True

[mypy-httpx.*]
ignore_missing_imports = True

[mypy-loguru.*]
ignore_missing_imports = True